// vim: syntax=cpp
#ifndef _QIF_qif_h_
#define _QIF_qif_h_

// heavy stuff should also go to precompiled.h
#include <functional>	// std::function
#include <armadillo>
#include <vector>
#include <cassert>
#include <set>
#include <list>
#include <map>
#include <unordered_map>
#include <iterator>		// needed by
#include <type_traits>	// range.hpp

#include <glpk.h>
#include <gmpxx.h>		// for rats

// configuration. use <...> to load the cmake-processed file from the bin dir (not the raw file from the source dir)
#include <qif_bits/config.h>

// Google OR-tools (has to be *before* OSQP for some crazy reason)
#ifdef QIF_USE_ORTOOLS
#undef USE_GLOP			// USE_GLOP,USE_CLP are automatically enabled when compiling via cmake, but they are
#undef USE_CLP			// not enabled in the ortools headers, so we force them here
#define USE_GLOP
#define USE_CLP
#include <ortools/linear_solver/linear_solver.h>
#include <ortools/linear_solver/linear_solver.pb.h>
#endif

// OSQP
// Note: in the source include dir, qif_bits/osqp is a symlink to external/osqp/include.
// When installed, osqp's includes are copied to qif_bits/osqp
#pragma GCC diagnostic push		// ignore warnings in osqp code
#pragma GCC diagnostic ignored "-Wunused-variable"
#include "qif_bits/osqp/osqp.h"
#pragma GCC diagnostic pop

namespace fastemd {
	// ignore warnings in FastEMD code
	#pragma GCC diagnostic push
	#pragma GCC diagnostic ignored "-Wsign-compare"
	#ifndef __clang__
	#pragma GCC diagnostic ignored "-Wmaybe-uninitialized"
	#endif

	#include "qif_bits/FastEMD/emd_hat.hpp"

	#pragma GCC diagnostic pop
}

namespace qif {
	#include "qif_bits/types.h"
	#include "qif_bits/aux.h"
	#include "qif_bits/wrapper.h"
	#include "qif_bits/range.hpp"

	#include "qif_bits/rng.h"
	#include "qif_bits/LinearProgram.h"
	#include "qif_bits/QuadraticProgram.h"
	#include "qif_bits/Graph.h"
	#include "qif_bits/geo.h"

	#include "qif_bits/probab.h"
	#include "qif_bits/channel.h"
	#include "qif_bits/channel_comp.h"
	#include "qif_bits/metric.h"

	#include "qif_bits/measure/shannon.h"
	#include "qif_bits/measure/bayes_vuln.h"
	#include "qif_bits/measure/bayes_risk.h"
	#include "qif_bits/measure/g_vuln.h"
	#include "qif_bits/measure/l_risk.h"
	#include "qif_bits/measure/guessing.h"
	#include "qif_bits/measure/d_priv.h"

	#include "qif_bits/mechanism/d_priv.h"
	#include "qif_bits/mechanism/g_vuln.h"
	#include "qif_bits/mechanism/l_risk.h"
	#include "qif_bits/mechanism/bayes_vuln.h"
	#include "qif_bits/mechanism/bayes_risk.h"
	#include "qif_bits/mechanism/planar_laplace.h"
	#include "qif_bits/mechanism/planar_geometric.h"
	#include "qif_bits/mechanism/shannon.h"

	#include "qif_bits/refinement.h"
	#include "qif_bits/utility.h"
	#include "qif_bits/games.h"
	#include "qif_bits/gowalla.h"
	#include "qif_bits/plot.h"
}

// patchs the arma namespace to rupport rat, needs to be outside qif
#include "qif_bits/arma_rat.h"


#endif
