name: build
on: [push]

jobs:
  # Ubuntu ########################################################
  ubuntu:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout git repository
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: Docker login
      run: docker login docker.pkg.github.com --username "${GITHUB_ACTOR}" --password "${GITHUB_TOKEN}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build manylinux pypi dist
      uses: ./.github/actions/build-pypi-manylinux


    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@master
      with:
        name: wheels-ubuntu
        path: python_lib/dist

    - name: Publish distribution to Test PyPI
      if: startsWith(github.event.ref, 'refs/tags/v') && contains(github.event.ref, '-test')
      run: pip3 install setuptools && pip3 install wheel && pip3 install twine && python3 -m twine upload -u __token__ python_lib/dist/*
      env:
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
        TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/

    - name: Publish distribution to PyPI
      if: startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, '-test')
      run: pip3 install setuptools && pip3 install wheel && pip3 install twine && python3 -m twine upload -u __token__ python_lib/dist/*
      env:
        TWINE_PASSWORD: ${{ secrets.pypi_password }}

    - name: Publish docs to gh-pages
      # if: startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, '-test')
      uses: peaceiris/actions-gh-pages@v2
      env:
        # https://github.com/peaceiris/actions-gh-pages/issues/9
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ACTIONS_DEPLOY_KEY: ${{ secrets.actions_deploy_key }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./html
      with:
        forceOrphan: true

  # MacOS ##########################################################
  macos:
    runs-on: macos-latest
    steps:
    - name: Checkout git repository
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: Install dependencies & build qif
      run: bash .github/workflows/macos-build-qif.sh

    # Build wheel for every python version
    - uses: actions/setup-python@v1
      with:
        python-version: '3.6'
    - name: Build python 3.6 wheel
      run: cd python_lib && rm -rf build && pip install -U setuptools wheel && python setup.py bdist_wheel

    - uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - name: Build python 3.7 wheel
      run: cd python_lib && rm -rf build && pip install -U setuptools wheel && python setup.py bdist_wheel

    - uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Build python 3.8 wheel
      run: cd python_lib && rm -rf build && pip install -U setuptools wheel && python setup.py bdist_wheel

    - uses: actions/setup-python@v1
      with:
        python-version: '3.9'
    - name: Build python 3.9 wheel
      run: cd python_lib && rm -rf build && pip install -U setuptools wheel && python setup.py bdist_wheel


    - name: Delocate wheels
      run: perl .github/workflows/delocate.pl python_lib/dist/*.whl


    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@master
      with:
        name: wheels-macos
        path: python_lib/dist

    - name: Publish distribution to Test PyPI
      if: startsWith(github.event.ref, 'refs/tags/v') && contains(github.event.ref, '-test')
      run: pip install twine && twine upload -u __token__ python_lib/dist/*
      env:
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
        TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/

    - name: Publish distribution to PyPI
      if: startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, '-test')
      run: pip install twine && twine upload -u __token__ python_lib/dist/*
      env:
        TWINE_PASSWORD: ${{ secrets.pypi_password }}